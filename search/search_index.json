{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"frontend-roadmap/","title":"\u2705 Frontend Roadmap","text":""},{"location":"frontend-roadmap/#1-fundamentals","title":"1. Fundamentals","text":""},{"location":"frontend-roadmap/#must-read-books","title":"Must-read Books","text":"<ul> <li> Code Complete by Steve McConnell</li> <li> The Computer Science Starter Pack: Networks, Cryptography and Data Science by V. F. Filo Ferreira</li> <li> The Computer Science Starter Pack: Everything a Programmer Needs to Know by V. F. Filo Ferreira</li> <li> Grokking Algorithms by Aditya Bhargava</li> <li> Code: The Hidden Language of Computer Hardware and Software by Charles Petzold</li> </ul>"},{"location":"frontend-roadmap/#html","title":"HTML:","text":"<ul> <li> Structure</li> <li> Semantics</li> <li> Forms</li> </ul>"},{"location":"frontend-roadmap/#css","title":"CSS:","text":"<ul> <li> Selectors</li> <li> Cascade</li> <li> Positioning</li> <li> Flexbox</li> <li> Grid</li> </ul>"},{"location":"frontend-roadmap/#javascript-basics","title":"JavaScript Basics:","text":"<ul> <li> Variables and types</li> <li> Loops and conditionals</li> <li> Functions</li> </ul>"},{"location":"frontend-roadmap/#2-advanced-javascript","title":"2. Advanced JavaScript","text":""},{"location":"frontend-roadmap/#core-concepts","title":"Core Concepts:","text":"<ul> <li> DOM manipulation</li> <li> Events</li> <li> Closures</li> <li> <code>this</code></li> <li> Hoisting</li> </ul>"},{"location":"frontend-roadmap/#async-programming","title":"Async Programming:","text":"<ul> <li> Callbacks</li> <li> Promises</li> <li> Async/await</li> </ul>"},{"location":"frontend-roadmap/#modules-and-bundling","title":"Modules and Bundling:","text":"<ul> <li> ESModules</li> <li> CommonJS</li> </ul>"},{"location":"frontend-roadmap/#browser-apis","title":"Browser APIs:","text":"<ul> <li> Fetch</li> <li> localStorage / sessionStorage</li> <li> History API</li> <li> Clipboard / Geolocation</li> </ul>"},{"location":"frontend-roadmap/#3-developer-tools","title":"3. Developer Tools","text":""},{"location":"frontend-roadmap/#git","title":"Git:","text":"<ul> <li> Standard Git features (init, clone, commit, push, pull)</li> <li> Branching, merging, rebasing</li> <li> Revert, reset, stash</li> <li> Amend</li> <li> Worktree</li> <li> Dangerous but useful:</li> <li> HEAD manipulations</li> <li> Cherry-picking</li> <li> Force push (when and why)</li> </ul>"},{"location":"frontend-roadmap/#github","title":"GitHub:","text":"<ul> <li> Pull requests and code reviews</li> <li> GitHub Projects / Issues</li> </ul>"},{"location":"frontend-roadmap/#common-tools","title":"Common Tools:","text":"<ul> <li> Postman (API testing)</li> <li> OpenAPI / Swagger (API specification)</li> </ul>"},{"location":"frontend-roadmap/#frontend-dev-workflow-tools","title":"Frontend Dev Workflow Tools:","text":"<ul> <li> Webpack / Vite dev mode</li> <li> React Developer Tools</li> <li> Lighthouse / Web Vitals in Chrome DevTools</li> <li> Prettier, ESLint</li> </ul>"},{"location":"frontend-roadmap/#terminal-npm","title":"Terminal &amp; NPM:","text":"<ul> <li> CLI basics (cd, mkdir, touch, ls, etc.)</li> <li> npm / yarn commands</li> <li> Understanding <code>package.json</code> structure</li> </ul>"},{"location":"frontend-roadmap/#4-modern-css","title":"4. Modern CSS","text":""},{"location":"frontend-roadmap/#preprocessors","title":"Preprocessors:","text":"<ul> <li> Sass / SCSS</li> </ul>"},{"location":"frontend-roadmap/#methodologies","title":"Methodologies:","text":"<ul> <li> BEM</li> <li> Atomic CSS</li> <li> OOCSS</li> </ul>"},{"location":"frontend-roadmap/#utility-first-css","title":"Utility-first CSS:","text":"<ul> <li> Tailwind CSS</li> </ul>"},{"location":"frontend-roadmap/#responsive-design","title":"Responsive Design:","text":"<ul> <li> Media queries</li> <li> Mobile-first approach</li> </ul>"},{"location":"frontend-roadmap/#5-react-basics","title":"5. React Basics","text":"<ul> <li> JSX</li> <li> Functional components</li> <li> Props and state</li> <li> useState / useEffect</li> <li> Conditional rendering</li> <li> Forms and event handling</li> <li> Lifting state up</li> <li> Prop drilling</li> <li> Component folder structures (e.g. FSD)</li> </ul>"},{"location":"frontend-roadmap/#6-advanced-react","title":"6. Advanced React","text":""},{"location":"frontend-roadmap/#hooks","title":"Hooks:","text":"<ul> <li> useContext</li> <li> useRef</li> <li> useMemo / useCallback</li> </ul>"},{"location":"frontend-roadmap/#routing","title":"Routing:","text":"<ul> <li> React Router</li> </ul>"},{"location":"frontend-roadmap/#custom-hooks","title":"Custom Hooks:","text":"<ul> <li> Encapsulate side effects and logic</li> </ul>"},{"location":"frontend-roadmap/#state-management","title":"State Management:","text":"<ul> <li> Redux (Toolkit)</li> <li> Zustand</li> <li> RTK Query / React Query</li> </ul>"},{"location":"frontend-roadmap/#7-testing","title":"7. Testing","text":""},{"location":"frontend-roadmap/#unit-testing","title":"Unit Testing:","text":"<ul> <li> Jest basics</li> <li> Mocking and spies</li> </ul>"},{"location":"frontend-roadmap/#component-testing","title":"Component Testing:","text":"<ul> <li> React Testing Library</li> </ul>"},{"location":"frontend-roadmap/#e2e-testing","title":"E2E Testing:","text":"<ul> <li> Cypress / Playwright</li> </ul>"},{"location":"frontend-roadmap/#8-build-tools","title":"8. Build Tools","text":"<ul> <li> Webpack</li> <li> Loaders (babel-loader, css-loader)</li> <li> DevServer</li> <li> Optimization (tree shaking, code splitting)</li> <li> Vite</li> <li> HMR (Hot Module Replacement)</li> <li> Plugin system</li> <li> Babel</li> <li> PostCSS</li> <li> Bundle analysis tools (e.g., webpack-bundle-analyzer)</li> </ul>"},{"location":"frontend-roadmap/#9-deployment","title":"9. Deployment","text":""},{"location":"frontend-roadmap/#containerization","title":"Containerization:","text":"<ul> <li> Docker</li> <li> Multi-stage Dockerfile</li> <li> Containers</li> </ul>"},{"location":"frontend-roadmap/#cicd-pipelining","title":"CI/CD pipelining:","text":"<ul> <li> GitHub Actions</li> <li> Build/lint/test workflows</li> <li> Automatic deployments</li> </ul>"},{"location":"frontend-roadmap/#lightweight-platforms","title":"Lightweight platforms:","text":"<ul> <li> Vercel</li> <li> GitHub integration</li> <li> Env vars and preview builds</li> <li> Netlify</li> <li> Deployment configuration</li> <li> Redirects and headers</li> </ul>"},{"location":"frontend-roadmap/#static-deployment","title":"Static deployment:","text":"<ul> <li> GitHub Pages</li> <li> gh-pages branch</li> <li> mkdocs gh-deploy</li> </ul>"},{"location":"frontend-roadmap/#configuration","title":"Configuration:","text":"<ul> <li> <code>.env</code> files</li> <li> Secret management in CI/CD</li> </ul>"},{"location":"frontend-roadmap/#performance","title":"Performance:","text":"<ul> <li> Lighthouse audits</li> <li> Core Web Vitals</li> </ul>"},{"location":"frontend-roadmap/#10-patterns-architecture","title":"10. Patterns &amp; Architecture","text":"<ul> <li> Separation of concerns</li> <li> Reusable and modular components</li> <li> Feature-Sliced Design (FSD)</li> <li> Module aliasing (<code>@shared</code>, <code>@entities</code>, etc.)</li> </ul>"},{"location":"frontend-roadmap/#11-advanced-topics","title":"11. Advanced Topics","text":"<ul> <li> SSR / SSG: Next.js or Remix</li> <li> i18n (i18next)</li> <li> Accessibility (a11y)</li> <li> Web security basics (XSS, CSRF, CORS)</li> <li> PWA (Progressive Web Apps)</li> </ul>"},{"location":"frontend-roadmap/#12-portfolio-career-growth","title":"12. Portfolio &amp; Career Growth","text":""},{"location":"frontend-roadmap/#projects","title":"Projects:","text":"<ul> <li> Clean README files</li> <li> Project using external API</li> <li> Project using state manager</li> <li> Project using AI</li> </ul>"},{"location":"frontend-roadmap/#growth","title":"Growth:","text":"<ul> <li> Contribute to open source</li> <li> Documented personal roadmap (e.g., MkDocs)</li> </ul>"},{"location":"vim-tips/","title":"Vim tips","text":""},{"location":"vim-tips/#filenavigator","title":"FileNavigator","text":""},{"location":"vim-tips/#scrolling","title":"Scrolling","text":"<p>z+z/z+b/z+t :: current line on center/bottom/top</p>"},{"location":"vim-tips/#navigation","title":"Navigation","text":"<p>fx (Fx) :: Navigation before the next(previous) occurrence of x character tx (Tx) :: Navigation after the next(previous) occurrence of x character ; (,) :: repeat(unrepeat) f/F/t/T command</p>"},{"location":"vim-tips/#mode-switching","title":"Mode switching","text":"<p>ctrl+o: command mode only for one command</p>"},{"location":"vim-tips/#text-casing","title":"Text casing","text":"<p>~ :: invert the case of the character under the cursor g~(e/$/iw/0) :: followed by range inverts symbols gu(e/$/iw/0) :: followed by range lowercases symbols gU(e/$/iw/0) :: followed by range UPPERCASES symbols</p>"},{"location":"vim-tips/#folding","title":"Folding","text":"<ul> <li>zM :: closes all folds</li> <li>zm :: folds nested level by level</li> <li>zR :: open all folds</li> <li>zr :: open level by level</li> <li>zO ::</li> <li>zo ::</li> </ul>"},{"location":"vim-tips/#multicursor","title":"Multicursor","text":"<ul> <li><code>&lt;c-V&gt;</code> - Enter Visual Block mode.</li> <li>Use <code>j</code>/<code>k</code> to select the lines.</li> <li><code>$</code> - Move cursor to last character.</li> <li><code>A</code> - Enter insert mode after last character.</li> <li>Insert desired text.</li> <li><code>&lt;Esc&gt;</code> - Exit insert mode and finish block append.</li> </ul>"},{"location":"vim-tips/#nvim-surround-external-tool","title":"nvim surround (external tool)","text":"<p>The three \"core\" operations of <code>add</code>/<code>delete</code>/<code>change</code> can be done with the keymaps <code>ys{motion}{char}</code>, <code>ds{char}</code>, and <code>cs{target}{replacement}</code>, respectively. For the following examples, <code>*</code> will denote the cursor position:</p> <pre><code>    Old text                    Command         New text\n--------------------------------------------------------------------------------\n    surr*ound_words             ysiw)           (surround_words)\n    *make strings               ys$\"            \"make strings\"\n    [delete ar*ound me!]        ds]             delete around me!\n    remove &lt;b&gt;HTML t*ags&lt;/b&gt;    dst             remove HTML tags\n    'change quot*es'            cs'\"            \"change quotes\"\n    &lt;b&gt;or tag* types&lt;/b&gt;        csth1&lt;CR&gt;       &lt;h1&gt;or tag types&lt;/h1&gt;\n    delete(functi*on calls)     dsf             function calls\n</code></pre>"}]}